{"version":3,"sources":["webpack:///./src/templates/blogpost.module.css","webpack:///./src/templates/blog-post.js"],"names":["module","exports","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","readingTime","featuredImgFluid","frontmatter","featuredImage","childImageSharp","fluid","image","resize","description","excerpt","pathname","itemScope","itemType","className","blogPostStyle","container","id","itemProp","item","datePost","date","bio","img","dangerouslySetInnerHTML","__html","html","list","to","fields","slug","rel","BlogPostBySlug"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,KAAO,+BAA+B,IAAM,8BAA8B,UAAY,oCAAoC,MAAQ,kC,kCCDpJ,iNAQe,SAASC,EAAT,GAA4D,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SACtDC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAgCR,EAAhCQ,SAAUC,EAAsBT,EAAtBS,KAAMC,EAAgBV,EAAhBU,YACpBC,EAAmBT,EAAKU,YAAYC,cAAcC,gBAAgBC,MAEhEC,EAAQd,EAAKU,YAAYI,MAC3Bd,EAAKU,YAAYC,cAAcC,gBAAgBG,OAC/C,KAEJ,OACE,kBAAC,IAAD,CAAQhB,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKU,YAAYL,MACxBW,YAAahB,EAAKU,YAAYM,aAAehB,EAAKiB,QAClDH,MAAOA,EACPI,SAAUnB,EAASmB,WAErB,6BAASC,WAAS,EAACC,SAAS,6BAC1B,4BAAQC,UAAWC,IAAcC,WAC/B,wBACEC,GAAG,aACHC,SAAS,WACTJ,UAAcC,IAAcI,KAAnB,IAA2BJ,IAAcjB,OAEjDL,EAAKU,YAAYL,OAEpB,kBAAC,IAAD,CACEsB,SAAU3B,EAAKU,YAAYkB,KAC3BpB,YAAaA,EACbgB,GAAIF,IAAcO,IAClBR,UAAWC,IAAcI,OAE3B,yBAAKL,UAAS,GAAKC,IAAcQ,KAC/B,kBAAC,IAAD,CAAKjB,MAAOJ,MAGhB,6BACEsB,wBAAyB,CAAEC,OAAQhC,EAAKiC,MACxCR,SAAS,gBAEX,8BAEF,6BACE,wBAAIJ,UAAWC,IAAcY,MAC3B,4BACG5B,GACC,kBAAC,OAAD,CAAM6B,GAAE,QAAU7B,EAAS8B,OAAOC,KAAQC,IAAI,QAA9C,KACKhC,EAASI,YAAYL,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAM4B,GAAE,QAAU5B,EAAK6B,OAAOC,KAAQC,IAAI,QACvC/B,EAAKG,YAAYL,MADpB,UAWP,IAAMkC,EAAc","file":"component---src-templates-blog-post-js-81a5ed2a4602f7ffc608.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"blogpost-module--list--1emvO\",\"img\":\"blogpost-module--img--2GZPS\",\"container\":\"blogpost-module--container--3S83O\",\"title\":\"blogpost-module--title--JOEm8\"};","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport blogPostStyle from \"./blogpost.module.css\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/LayoutBlog\"\nimport SEO from \"../components/seo\"\nimport Img from \"gatsby-image\"\n\nexport default function BlogPostTemplate({ data, pageContext, location }) {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next, readingTime } = pageContext\n  let featuredImgFluid = post.frontmatter.featuredImage.childImageSharp.fluid\n\n  const image = post.frontmatter.image\n    ? post.frontmatter.featuredImage.childImageSharp.resize\n    : null\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        image={image}\n        pathname={location.pathname}\n      />\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <header className={blogPostStyle.container}>\n          <h1\n            id=\"blog-title\"\n            itemProp=\"headline\"\n            className={`${blogPostStyle.item} ${blogPostStyle.title}`}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <Bio\n            datePost={post.frontmatter.date}\n            readingTime={readingTime}\n            id={blogPostStyle.bio}\n            className={blogPostStyle.item}\n          />\n          <div className={`${blogPostStyle.img}`}>\n            <Img fluid={featuredImgFluid} />\n          </div>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <nav>\n        <ul className={blogPostStyle.list}>\n          <li>\n            {previous && (\n              <Link to={`/blog${previous.fields.slug}`} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={`/blog${next.fields.slug}`} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const BlogPostBySlug = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n            resize(width: 1200) {\n              src\n              height\n              width\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}