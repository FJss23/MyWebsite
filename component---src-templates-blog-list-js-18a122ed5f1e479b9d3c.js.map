{"version":3,"sources":["webpack:///./src/components/postPreview.module.css","webpack:///./src/components/PostPreview.js","webpack:///./src/templates/bloglist.module.css","webpack:///./src/templates/blog-list.js"],"names":["module","exports","PostPreview","title","slug","date","description","imgFluid","readTime","space","bigTitle","key","itemScope","itemType","className","postPrevStyle","container","fluid","img","header","to","itemProp","dangerouslySetInnerHTML","__html","datePost","readingTime","BlogList","data","pageContext","posts","allMarkdownRemark","edges","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","map","index","node","frontmatter","fields","excerpt","featuredImage","childImageSharp","text","last","blogListStyle","list","element","rel","Array","from","length","_","i","blogListQuery"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,MAAQ,mCAAmC,IAAM,iCAAiC,UAAY,uCAAuC,OAAS,oCAAoC,YAAc,yCAAyC,MAAQ,qC,kCCDnQ,6HAMe,SAASC,EAAT,GAQX,IAPFC,EAOC,EAPDA,MACAC,EAMC,EANDA,KACAC,EAKC,EALDA,KACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,SACAC,EACC,EADDA,MAEMC,EAAWP,GAASC,EAE1B,OACE,6BACEO,IAAKP,EACLQ,WAAS,EACTC,SAAS,4BACTC,UAAcC,IAAcC,UAAnB,MACG,IAAVP,EAAiB,GAAKM,IAAcN,QAGtC,kBAAC,IAAD,CAAKQ,MAAOV,EAAUO,UAAWC,IAAcG,MAC/C,4BAAQJ,UAAWC,IAAcI,QAC/B,wBAAIL,UAAWC,IAAcZ,OAC3B,kBAAC,OAAD,CAAMiB,GAAE,QAAUhB,EAAV,cAA6BiB,SAAS,OAC5C,0BAAMA,SAAS,YAAYX,KAG/B,uBACEY,wBAAyB,CACvBC,OAAQjB,GAEVe,SAAS,cACTP,UAAWC,IAAcT,cAE3B,kBAAC,IAAD,CAAKkB,SAAUnB,EAAMoB,YAAajB,Q,qBCvC1CR,EAAOC,QAAU,CAAC,KAAO,+BAA+B,QAAU,oC,kCCDlE,2LAOe,SAASyB,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACjCC,EAAQF,EAAKG,kBAAkBC,MAC7BC,EAA0BJ,EAA1BI,YAAaC,EAAaL,EAAbK,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EACJJ,EAAc,GAAM,EAAI,SAAWA,EAAc,GAAGK,WAChDC,GAAYN,EAAc,GAAGK,WAEnC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKlC,MAAM,OAAOG,YAAY,wCAC9B,wBAAIQ,UAAU,gBAAd,QACCe,EAAMU,KAAI,WAAWC,GAAW,IAAnBC,EAAkB,EAAlBA,KACZ,OACE,kBAAC,IAAD,CACEtC,MAAOsC,EAAKC,YAAYvC,OAASsC,EAAKE,OAAOvC,KAC7CA,KAAMqC,EAAKE,OAAOvC,KAClBC,KAAMoC,EAAKC,YAAYrC,KACvBC,YAAamC,EAAKC,YAAYpC,aAAemC,EAAKG,QAClDrC,SAAUkC,EAAKC,YAAYG,cAAcC,gBAAgB7B,MACzDN,IAAK6B,EACLhC,SAAUiC,EAAKE,OAAOlB,YAAYsB,KAClCtC,OAAO,EACPuC,MAAM,OAIZ,wBAAIlC,UAAWmC,IAAcC,OACzBhB,GACA,kBAAC,OAAD,CAAMd,GAAIgB,EAAUtB,UAAWmC,IAAcE,QAASC,IAAI,QAA1D,cAIDC,MAAMC,KAAK,CAAEC,OAAQtB,IAAY,SAACuB,EAAGC,GAAJ,OAChC,wBAAI9C,IAAG,qBAAsB8C,EAAI,IAC/B,kBAAC,OAAD,CACE3C,UAAcmC,IAAcE,QAAnB,KACPM,EAAI,IAAMzB,EAAc,SAAW,IAErCZ,GAAE,UAAiB,IAANqC,EAAU,GAAKA,EAAI,IAE/BA,EAAI,QAITtB,GACA,kBAAC,OAAD,CAAMrB,UAAWmC,IAAcE,QAAS/B,GAAIkB,EAAUc,IAAI,QAA1D,YASH,IAAMM,EAAa","file":"component---src-templates-blog-list-js-18a122ed5f1e479b9d3c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"postPreview-module--title--pIc0Z\",\"img\":\"postPreview-module--img--ZjSNP\",\"container\":\"postPreview-module--container--6Mm7e\",\"header\":\"postPreview-module--header--1K47O\",\"description\":\"postPreview-module--description--3ISJC\",\"space\":\"postPreview-module--space--37aEc\"};","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport postPrevStyle from \"./postPreview.module.css\"\nimport Img from \"gatsby-image\"\nimport Bio from \"./bio\"\n\nexport default function PostPreview({\n  title,\n  slug,\n  date,\n  description,\n  imgFluid,\n  readTime,\n  space,\n}) {\n  const bigTitle = title || slug\n\n  return (\n    <article\n      key={slug}\n      itemScope\n      itemType=\"http://schema.org/Article\"\n      className={`${postPrevStyle.container} ${\n        space === true ? \"\" : postPrevStyle.space\n      }`}\n    >\n      <Img fluid={imgFluid} className={postPrevStyle.img} />\n      <header className={postPrevStyle.header}>\n        <h2 className={postPrevStyle.title}>\n          <Link to={`/blog${slug}#blog-title`} itemProp=\"url\">\n            <span itemProp=\"headline\">{bigTitle}</span>\n          </Link>\n        </h2>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: description,\n          }}\n          itemProp=\"description\"\n          className={postPrevStyle.description}\n        />\n        <Bio datePost={date} readingTime={readTime} />\n      </header>\n    </article>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"bloglist-module--list--3esd3\",\"element\":\"bloglist-module--element--1eGoQ\"};","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/LayoutBlog\"\nimport PostPreview from \"../components/PostPreview\"\nimport blogListStyle from \"./bloglist.module.css\"\nimport SEO from \"../components/seo\"\n\nexport default function BlogList({ data, pageContext }) {\n  const posts = data.allMarkdownRemark.edges\n  const { currentPage, numPages } = pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage =\n    currentPage - 1 === 1 ? \"/blog\" : (currentPage - 1).toString()\n  const nextPage = (currentPage + 1).toString()\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" description=\"Blog section of my personal website\" />\n      <h1 className=\"sectionTitle\">Blog</h1>\n      {posts.map(({ node }, index) => {\n        return (\n          <PostPreview\n            title={node.frontmatter.title || node.fields.slug}\n            slug={node.fields.slug}\n            date={node.frontmatter.date}\n            description={node.frontmatter.description || node.excerpt}\n            imgFluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n            key={index}\n            readTime={node.fields.readingTime.text}\n            space={false}\n            last={false}\n          />\n        )\n      })}\n      <ul className={blogListStyle.list}>\n        {!isFirst && (\n          <Link to={prevPage} className={blogListStyle.element} rel=\"prev\">\n            ← Previous\n          </Link>\n        )}\n        {Array.from({ length: numPages }, (_, i) => (\n          <li key={`pagination-number${i + 1}`}>\n            <Link\n              className={`${blogListStyle.element} ${\n                i + 1 === currentPage ? \"active\" : \"\"\n              }`}\n              to={`/blog/${i === 0 ? \"\" : i + 1}`}\n            >\n              {i + 1}\n            </Link>\n          </li>\n        ))}\n        {!isLast && (\n          <Link className={blogListStyle.element} to={nextPage} rel=\"next\">\n            Next →\n          </Link>\n        )}\n      </ul>\n    </Layout>\n  )\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}